### Applied Hidden Number Problem. Implementation from : https://eprint.iacr.org/2020/1506.pdf

import hashlib
from Crypto.Cipher import AES

def decrypt(secret_key):
    sha1 = hashlib.sha1()
    sha1.update(str(secret_key).encode('ascii'))
    key = sha1.digest()[:16]
    iv = int("fe2021e664400d538d6c73d5cb7c2b9c",16).to_bytes(16,byteorder="big")
    ciphertext = int("91e03666b322218a23f1e36b851a5f0bae4a68306d4452f9592d80985329589825c6653194e043de5eb33716d40582f3",16).to_bytes(48,byteorder="big")

    cipher = AES.new(key, AES.MODE_CBC, iv)
    plaintext = cipher.decrypt(ciphertext)
    print(plaintext)

K = 2^255

p=13174968903853068924034772351710441090824248437806649466511383716567362064664383440858066429366959443577008495797616997501580602180337701827030318068422173
B=1801502893625824064030286101337087936643736181112893915799457251138333524353946495740427689461737007792190162591411522809844317322187149103303010749052159
r1=286583551638943074569316279604930697031318527884232679227233290282844842836544465698894873972916008209080471831413887376734663274000686651598348054691840      
c=12346781991689342491380745286031388613115407875212446301521146073510813623708006437547110910738497870045491495452504793285982450557805656837638889549419841
r2=9284104950827479159043855436092500741653388018152667739644086258403644738749848880573580574076413145338474570436350282882388891582754470595107423638257664     

t = pow(B,c,p)
t_inv = pow(t,-1,p)

M = Matrix(ZZ,[
    [p, 0, 0],
    [t_inv,1,0],
    [(r1 - t_inv*r2)%p,0,K]])
M = M.LLL()
#print(M)

for m in M:
    #if m[2] == K:
    k1 = m[0]
    k2 = m[1]
    s = r1 - k1
    #print(s)
    decrypt(s)

